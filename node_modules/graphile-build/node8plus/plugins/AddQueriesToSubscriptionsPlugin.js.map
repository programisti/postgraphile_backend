{"version":3,"sources":["../../src/plugins/AddQueriesToSubscriptionsPlugin.js"],"names":["AddQueriesToSubscriptionsPlugin","builder","subscriptions","live","hook","fields","build","context","extend","getTypeByName","inflection","scope","isRootSubscription","fieldWithHooks","Query","builtin","queryFields","getFields","subscriptionFields","Object","keys","reduce","memo","queryFieldName","queryField","oldResolve","resolve","description","type","args","newArgs","arg","name","defaultValue","e","info","rootValue","liveAbort","subscribe","liveCoordinator","deprecationReason","isDeprecated","undefined","isLiveField","originalField"],"mappings":";;;;;AAIA,MAAMA,kCAA0C,UAC9CC,OAD8C,EAE9C,EAAEC,aAAF,EAAiBC,IAAjB,EAF8C,EAG9C;AACA,MAAI,CAACD,aAAD,IAAkB,CAACC,IAAvB,EAA6B;AAC3B;AACD;AACDF,UAAQG,IAAR,CACE,0BADF,EAEE,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,KAA4B;AAC1B,UAAM,EAAEC,MAAF,EAAUC,aAAV,EAAyBC,UAAzB,KAAwCJ,KAA9C;AACA,UAAM;AACJK,aAAO,EAAEC,kBAAF,EADH;AAEJC;AAFI,QAGFN,OAHJ;AAIA,QAAI,CAACK,kBAAL,EAAyB;AACvB,aAAOP,MAAP;AACD;;AAED,UAAMS,QAA2BL,cAC/BC,WAAWK,OAAX,CAAmB,OAAnB,CAD+B,CAAjC;AAGA,UAAMC,cAAcF,MAAMG,SAAN,EAApB;AACA,UAAMC,qBAAqBC,OAAOC,IAAP,CAAYJ,WAAZ,EAAyBK,MAAzB,CACzB,CAACC,IAAD,EAAOC,cAAP,KAA0B;AACxB,YAAMC,aAAaR,YAAYO,cAAZ,CAAnB;AACA,YAAME,aAAaD,WAAWE,OAA9B;AACAJ,WAAKC,cAAL,IAAuBV,eACrBH,WAAWP,IAAX,CAAgBoB,cAAhB,CADqB,EAErB;AACEI,qBAAa,CAACH,WAAWG,WAAX,IAA0B,EAA3B,IAAiC,SADhD;AAEEC,cAAMJ,WAAWI,IAFnB;AAGEC,cAAM,CAACL,WAAWK,IAAX,IAAmB,EAApB,EAAwBR,MAAxB,CAA+B,CAACS,OAAD,EAAUC,GAAV,KAAkB;AACrD,gBAAM,EAAEC,IAAF,EAAQL,WAAR,EAAqBC,IAArB,EAA2BK,YAA3B,KAA4CF,GAAlD;AACAD,kBAAQE,IAAR,IAAgB;AACdL,uBADc;AAEdC,gBAFc;AAGdK;AAHc,WAAhB;AAKA,iBAAOH,OAAP;AACD,SARK,EAQH,EARG,CAHR;AAYE,YAAIL,aACA;AACEC,mBAAS,OAAO,GAAGG,IAAV,KAAmB;AAC1B,gBAAI;AACF,qBAAO,MAAMJ,WAAW,GAAGI,IAAd,CAAb;AACD,aAFD,CAEE,OAAOK,CAAP,EAAU;AACV,oBAAMC,OAAON,KAAK,CAAL,CAAb;AACA,kBACEM,KAAKC,SAAL,IACA,OAAOD,KAAKC,SAAL,CAAeC,SAAtB,KAAoC,UAFtC,EAGE;AACAF,qBAAKC,SAAL,CAAeC,SAAf,CAAyBH,CAAzB;AACD;AACD,oBAAMA,CAAN;AACD;AACF;AAdH,SADA,GAiBA,IAjBJ,CAZF;AA8BEI,mBAAWhC,MAAMiC,eAAN,CAAsBD,SA9BnC;AA+BEE,2BAAmBhB,WAAWiB,YAAX,GACfjB,WAAWgB,iBADI,GAEfE;AAjCN,OAFqB,EAqCrB;AACEC,qBAAa,IADf;AAEEC,uBAAepB;AAFjB,OArCqB,CAAvB;AA0CA,aAAOF,IAAP;AACD,KA/CwB,EAgDzB,EAhDyB,CAA3B;AAkDA,WAAOd,OAAOH,MAAP,EAAea,kBAAf,CAAP;AACD,GAnEH,EAoEE,CAAC,2BAAD,CApEF;AAsED,CA7ED;kBA8EelB,+B","file":"AddQueriesToSubscriptionsPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\nimport type { GraphQLObjectType } from \"graphql\";\n\nconst AddQueriesToSubscriptionsPlugin: Plugin = function(\n  builder,\n  { subscriptions, live }\n) {\n  if (!subscriptions || !live) {\n    return;\n  }\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, context) => {\n      const { extend, getTypeByName, inflection } = build;\n      const {\n        scope: { isRootSubscription },\n        fieldWithHooks,\n      } = context;\n      if (!isRootSubscription) {\n        return fields;\n      }\n\n      const Query: GraphQLObjectType = getTypeByName(\n        inflection.builtin(\"Query\")\n      );\n      const queryFields = Query.getFields();\n      const subscriptionFields = Object.keys(queryFields).reduce(\n        (memo, queryFieldName) => {\n          const queryField = queryFields[queryFieldName];\n          const oldResolve = queryField.resolve;\n          memo[queryFieldName] = fieldWithHooks(\n            inflection.live(queryFieldName),\n            {\n              description: (queryField.description || \"\") + \" (live)\",\n              type: queryField.type,\n              args: (queryField.args || []).reduce((newArgs, arg) => {\n                const { name, description, type, defaultValue } = arg;\n                newArgs[name] = {\n                  description,\n                  type,\n                  defaultValue,\n                };\n                return newArgs;\n              }, {}),\n              ...(oldResolve\n                ? {\n                    resolve: async (...args) => {\n                      try {\n                        return await oldResolve(...args);\n                      } catch (e) {\n                        const info = args[3];\n                        if (\n                          info.rootValue &&\n                          typeof info.rootValue.liveAbort === \"function\"\n                        ) {\n                          info.rootValue.liveAbort(e);\n                        }\n                        throw e;\n                      }\n                    },\n                  }\n                : null),\n              subscribe: build.liveCoordinator.subscribe,\n              deprecationReason: queryField.isDeprecated\n                ? queryField.deprecationReason\n                : undefined,\n            },\n            {\n              isLiveField: true,\n              originalField: queryField,\n            }\n          );\n          return memo;\n        },\n        {}\n      );\n      return extend(fields, subscriptionFields);\n    },\n    [\"AddQueriesToSubscriptions\"]\n  );\n};\nexport default AddQueriesToSubscriptionsPlugin;\n"]}