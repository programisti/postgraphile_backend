{"version":3,"sources":["../../src/plugins/MutationPlugin.js"],"names":["isValidMutation","Mutation","Object","keys","getFields","length","e","MutationPlugin","builder","hook","schema","build","newWithHooks","extend","graphql","GraphQLObjectType","inflection","name","builtin","description","__origin","isRootMutation","mutation"],"mappings":";;;;;;;AAGA,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAI;AACF,QAAI,CAACA,QAAL,EAAe;AACb,aAAO,KAAP;AACD;AACD,QAAIC,OAAOC,IAAP,CAAYF,SAASG,SAAT,EAAZ,EAAkCC,MAAlC,KAA6C,CAAjD,EAAoD;AAClD,aAAO,KAAP;AACD;AACF,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD;;kBAEe,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AACrDA,UAAQC,IAAR,CACE,eADF,EAEE,CAACC,MAAD,EAAaC,KAAb,KAAuB;AACrB,UAAM;AACJC,kBADI;AAEJC,YAFI;AAGJC,eAAS,EAAEC,iBAAF,EAHL;AAIJC;AAJI,QAKFL,KALJ;AAMA,UAAMV,WAAWW,aACfG,iBADe,EAEf;AACEE,YAAMD,WAAWE,OAAX,CAAmB,UAAnB,CADR;AAEEC,mBACE;AAHJ,KAFe,EAOf;AACEC,gBAAW,8CADb;AAEEC,sBAAgB;AAFlB,KAPe,EAWf,IAXe,CAAjB;AAaA,QAAIrB,gBAAgBC,QAAhB,CAAJ,EAA+B;AAC7B,aAAOY,OACLH,MADK,EAEL;AACEY,kBAAUrB;AADZ,OAFK,EAKL,gCALK,CAAP;AAOD,KARD,MAQO;AACL,aAAOS,MAAP;AACD;AACF,GAjCH,EAkCE,CAAC,UAAD,CAlCF,EAmCE,EAnCF,EAoCE,CAAC,OAAD,CApCF;AAsCD,C","file":"MutationPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\n\nfunction isValidMutation(Mutation) {\n  try {\n    if (!Mutation) {\n      return false;\n    }\n    if (Object.keys(Mutation.getFields()).length === 0) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nexport default (async function MutationPlugin(builder) {\n  builder.hook(\n    \"GraphQLSchema\",\n    (schema: {}, build) => {\n      const {\n        newWithHooks,\n        extend,\n        graphql: { GraphQLObjectType },\n        inflection,\n      } = build;\n      const Mutation = newWithHooks(\n        GraphQLObjectType,\n        {\n          name: inflection.builtin(\"Mutation\"),\n          description:\n            \"The root mutation type which contains root level fields which mutate data.\",\n        },\n        {\n          __origin: `graphile-build built-in (root mutation type)`,\n          isRootMutation: true,\n        },\n        true\n      );\n      if (isValidMutation(Mutation)) {\n        return extend(\n          schema,\n          {\n            mutation: Mutation,\n          },\n          \"Adding mutation type to schema\"\n        );\n      } else {\n        return schema;\n      }\n    },\n    [\"Mutation\"],\n    [],\n    [\"Query\"]\n  );\n}: Plugin);\n"]}